PROJECT     = project-name

CC          = i686-w64-mingw32-g++
#CC         = x86_64-w64-mingw32-gcc
CFLAGS      = -std=c++2a -Wall -Wextra -Werror -Wpedantic -Wshadow

LD          = i686-w64-mingw32-g++
#LD         = x86_64-w64-mingw32-gcc
LDFLAGS     = -shared

ASM         = nasm
ASFLAGS     = -f win32
#ASFLAGS    = -f win64

BIN         = Bin
BUILD       = Build
DEBUG       = $(OBJ)/Debug
RELEASE     = $(OBJ)/Release

SRC         = Source
OBJ         = Build
ASM_SRC     = $(SRC)/Assembly
ASM_OBJ     = $(OBJ)/Assembly

SOURCES     = $(wildcard $(SRC)/*.cpp)
DBG_OBJECTS = $(patsubst $(SRC)/%.cpp,$(DEBUG)/%.obj,$(SOURCES))
REL_OBJECTS = $(patsubst $(SRC)/%.cpp,$(RELEASE)/%.obj,$(SOURCES))
ASM_SOURCES = $(wildcard $(ASM_SRC)/*.asm)
ASM_OBJECTS = $(patsubst $(ASM_SRC)/%.asm,$(ASM_OBJ)/%.obj,$(ASM_SOURCES))

INCLUDE     = Include
INCLUDES    = $(addprefix -I,$(INCLUDE))

LIB_FILES   = d3d9 d3dx9
LIBS        = $(addprefix -l,$(LIB_FILES))

all: debug release

debug: $(DEBUG)
release: $(RELEASE)

$(DEBUG): CFLAGS += -g -DDEBUG
$(DEBUG): $(OBJ) $(BIN) $(ASM_OBJECTS) $(DBG_OBJECTS) 
	$(LD) $(LDFLAGS) $(ASM_OBJECTS) $(DBG_OBJECTS) $(LIBS) -o $(BIN)/$(PROJECT)_d.dll

$(RELEASE): CFLAGS  += -O3 -fno-ident -fno-rtti -funroll-loops -fvisibility=hidden -DVC_EXTRA_LEAN
$(RELEASE): LDFLAGS += -s
$(RELEASE): $(OBJ) $(BIN) $(ASM_OBJECTS) $(REL_OBJECTS)
	$(LD) $(LDFLAGS) $(ASM_OBJECTS) $(REL_OBJECTS) $(LIBS) -o $(BIN)/$(PROJECT).dll

$(ASM_OBJECTS): $(ASM_OBJ)/%.obj: $(ASM_SRC)/%.asm
	$(ASM) $(ASFLAGS) $^ -o $@

$(DBG_OBJECTS): $(DEBUG)/%.obj: $(SRC)/%.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $^ -o $@

$(REL_OBJECTS): $(RELEASE)/%.obj: $(SRC)/%.cpp
	$(CC) $(CFLAGS) $(INCLUDES) -c $^ -o $@

$(OBJ):
	mkdir -p $@/Assembly
	mkdir -p $@/Debug
	mkdir -p $@/Release

$(BIN):
	mkdir -p $@

clean:
	rm -f Bin/*
	rm -f Build/{Assembly,Debug,Release}/*

extra-clean:
	rm -fr Bin
	rm -fr Build
